// Copyright (c) Six Labors.
// Licensed under the Six Labors Split License.

using System.Runtime.CompilerServices;

namespace SixLabors.ImageSharp.Formats.Heif.Av1.Transform.Inverse;

internal class Av1Dct64Inverse1dTransformer : IAv1Transformer1d
{
    public void Transform(Span<int> input, Span<int> output, int cosBit, Span<byte> stageRange)
    {
        Guard.MustBeSizedAtLeast(input, 64, nameof(input));
        Guard.MustBeSizedAtLeast(output, 64, nameof(output));
        TransformScalar(ref input[0], ref output[0], cosBit, stageRange);
    }

    /// <summary>
    /// SVT: svt_av1_idct64_new
    /// </summary>
    private static void TransformScalar(ref int input, ref int output, int cosBit, Span<byte> stageRange)
    {
        Span<int> cospi = Av1SinusConstants.CosinusPi(cosBit);
        int stage = 0;
        Span<int> temp1 = stackalloc int[64];
        Span<int> temp0 = stackalloc int[64];

        // stage 0;

        // stage 1;
        stage++;
        temp1[0] = Unsafe.Add(ref input, 0);
        temp1[1] = Unsafe.Add(ref input, 32);
        temp1[2] = Unsafe.Add(ref input, 16);
        temp1[3] = Unsafe.Add(ref input, 48);
        temp1[4] = Unsafe.Add(ref input, 8);
        temp1[5] = Unsafe.Add(ref input, 40);
        temp1[6] = Unsafe.Add(ref input, 24);
        temp1[7] = Unsafe.Add(ref input, 56);
        temp1[8] = Unsafe.Add(ref input, 4);
        temp1[9] = Unsafe.Add(ref input, 36);
        temp1[10] = Unsafe.Add(ref input, 20);
        temp1[11] = Unsafe.Add(ref input, 52);
        temp1[12] = Unsafe.Add(ref input, 12);
        temp1[13] = Unsafe.Add(ref input, 44);
        temp1[14] = Unsafe.Add(ref input, 28);
        temp1[15] = Unsafe.Add(ref input, 60);
        temp1[16] = Unsafe.Add(ref input, 2);
        temp1[17] = Unsafe.Add(ref input, 34);
        temp1[18] = Unsafe.Add(ref input, 18);
        temp1[19] = Unsafe.Add(ref input, 50);
        temp1[20] = Unsafe.Add(ref input, 10);
        temp1[21] = Unsafe.Add(ref input, 42);
        temp1[22] = Unsafe.Add(ref input, 26);
        temp1[23] = Unsafe.Add(ref input, 58);
        temp1[24] = Unsafe.Add(ref input, 6);
        temp1[25] = Unsafe.Add(ref input, 38);
        temp1[26] = Unsafe.Add(ref input, 22);
        temp1[27] = Unsafe.Add(ref input, 54);
        temp1[28] = Unsafe.Add(ref input, 14);
        temp1[29] = Unsafe.Add(ref input, 46);
        temp1[30] = Unsafe.Add(ref input, 30);
        temp1[31] = Unsafe.Add(ref input, 62);
        temp1[32] = Unsafe.Add(ref input, 1);
        temp1[33] = Unsafe.Add(ref input, 33);
        temp1[34] = Unsafe.Add(ref input, 17);
        temp1[35] = Unsafe.Add(ref input, 49);
        temp1[36] = Unsafe.Add(ref input, 9);
        temp1[37] = Unsafe.Add(ref input, 41);
        temp1[38] = Unsafe.Add(ref input, 25);
        temp1[39] = Unsafe.Add(ref input, 57);
        temp1[40] = Unsafe.Add(ref input, 5);
        temp1[41] = Unsafe.Add(ref input, 37);
        temp1[42] = Unsafe.Add(ref input, 21);
        temp1[43] = Unsafe.Add(ref input, 53);
        temp1[44] = Unsafe.Add(ref input, 13);
        temp1[45] = Unsafe.Add(ref input, 45);
        temp1[46] = Unsafe.Add(ref input, 29);
        temp1[47] = Unsafe.Add(ref input, 61);
        temp1[48] = Unsafe.Add(ref input, 3);
        temp1[49] = Unsafe.Add(ref input, 35);
        temp1[50] = Unsafe.Add(ref input, 19);
        temp1[51] = Unsafe.Add(ref input, 51);
        temp1[52] = Unsafe.Add(ref input, 11);
        temp1[53] = Unsafe.Add(ref input, 43);
        temp1[54] = Unsafe.Add(ref input, 27);
        temp1[55] = Unsafe.Add(ref input, 59);
        temp1[56] = Unsafe.Add(ref input, 7);
        temp1[57] = Unsafe.Add(ref input, 39);
        temp1[58] = Unsafe.Add(ref input, 23);
        temp1[59] = Unsafe.Add(ref input, 55);
        temp1[60] = Unsafe.Add(ref input, 15);
        temp1[61] = Unsafe.Add(ref input, 47);
        temp1[62] = Unsafe.Add(ref input, 31);
        temp1[63] = Unsafe.Add(ref input, 63);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 2
        stage++;
        temp0[0] = temp1[0];
        temp0[1] = temp1[1];
        temp0[2] = temp1[2];
        temp0[3] = temp1[3];
        temp0[4] = temp1[4];
        temp0[5] = temp1[5];
        temp0[6] = temp1[6];
        temp0[7] = temp1[7];
        temp0[8] = temp1[8];
        temp0[9] = temp1[9];
        temp0[10] = temp1[10];
        temp0[11] = temp1[11];
        temp0[12] = temp1[12];
        temp0[13] = temp1[13];
        temp0[14] = temp1[14];
        temp0[15] = temp1[15];
        temp0[16] = temp1[16];
        temp0[17] = temp1[17];
        temp0[18] = temp1[18];
        temp0[19] = temp1[19];
        temp0[20] = temp1[20];
        temp0[21] = temp1[21];
        temp0[22] = temp1[22];
        temp0[23] = temp1[23];
        temp0[24] = temp1[24];
        temp0[25] = temp1[25];
        temp0[26] = temp1[26];
        temp0[27] = temp1[27];
        temp0[28] = temp1[28];
        temp0[29] = temp1[29];
        temp0[30] = temp1[30];
        temp0[31] = temp1[31];
        temp0[32] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[63], temp1[32], -cospi[1], temp1[63], cosBit);
        temp0[33] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[31], temp1[33], -cospi[33], temp1[62], cosBit);
        temp0[34] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[47], temp1[34], -cospi[17], temp1[61], cosBit);
        temp0[35] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[15], temp1[35], -cospi[49], temp1[60], cosBit);
        temp0[36] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[55], temp1[36], -cospi[9], temp1[59], cosBit);
        temp0[37] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[23], temp1[37], -cospi[41], temp1[58], cosBit);
        temp0[38] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[39], temp1[38], -cospi[25], temp1[57], cosBit);
        temp0[39] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[7], temp1[39], -cospi[57], temp1[56], cosBit);
        temp0[40] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[59], temp1[40], -cospi[5], temp1[55], cosBit);
        temp0[41] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[27], temp1[41], -cospi[37], temp1[54], cosBit);
        temp0[42] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[43], temp1[42], -cospi[21], temp1[53], cosBit);
        temp0[43] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[11], temp1[43], -cospi[53], temp1[52], cosBit);
        temp0[44] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[51], temp1[44], -cospi[13], temp1[51], cosBit);
        temp0[45] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[19], temp1[45], -cospi[45], temp1[50], cosBit);
        temp0[46] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[35], temp1[46], -cospi[29], temp1[49], cosBit);
        temp0[47] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[3], temp1[47], -cospi[61], temp1[48], cosBit);
        temp0[48] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[61], temp1[47], cospi[3], temp1[48], cosBit);
        temp0[49] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[29], temp1[46], cospi[35], temp1[49], cosBit);
        temp0[50] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[45], temp1[45], cospi[19], temp1[50], cosBit);
        temp0[51] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[13], temp1[44], cospi[51], temp1[51], cosBit);
        temp0[52] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[53], temp1[43], cospi[11], temp1[52], cosBit);
        temp0[53] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[21], temp1[42], cospi[43], temp1[53], cosBit);
        temp0[54] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[37], temp1[41], cospi[27], temp1[54], cosBit);
        temp0[55] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[5], temp1[40], cospi[59], temp1[55], cosBit);
        temp0[56] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[57], temp1[39], cospi[7], temp1[56], cosBit);
        temp0[57] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[25], temp1[38], cospi[39], temp1[57], cosBit);
        temp0[58] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[41], temp1[37], cospi[23], temp1[58], cosBit);
        temp0[59] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[9], temp1[36], cospi[55], temp1[59], cosBit);
        temp0[60] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[49], temp1[35], cospi[15], temp1[60], cosBit);
        temp0[61] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[17], temp1[34], cospi[47], temp1[61], cosBit);
        temp0[62] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[33], temp1[33], cospi[31], temp1[62], cosBit);
        temp0[63] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[1], temp1[32], cospi[63], temp1[63], cosBit);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 3
        stage++;
        temp1[0] = temp0[0];
        temp1[1] = temp0[1];
        temp1[2] = temp0[2];
        temp1[3] = temp0[3];
        temp1[4] = temp0[4];
        temp1[5] = temp0[5];
        temp1[6] = temp0[6];
        temp1[7] = temp0[7];
        temp1[8] = temp0[8];
        temp1[9] = temp0[9];
        temp1[10] = temp0[10];
        temp1[11] = temp0[11];
        temp1[12] = temp0[12];
        temp1[13] = temp0[13];
        temp1[14] = temp0[14];
        temp1[15] = temp0[15];
        temp1[16] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[62], temp0[16], -cospi[2], temp0[31], cosBit);
        temp1[17] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[30], temp0[17], -cospi[34], temp0[30], cosBit);
        temp1[18] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[46], temp0[18], -cospi[18], temp0[29], cosBit);
        temp1[19] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[14], temp0[19], -cospi[50], temp0[28], cosBit);
        temp1[20] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[54], temp0[20], -cospi[10], temp0[27], cosBit);
        temp1[21] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[22], temp0[21], -cospi[42], temp0[26], cosBit);
        temp1[22] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[38], temp0[22], -cospi[26], temp0[25], cosBit);
        temp1[23] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[6], temp0[23], -cospi[58], temp0[24], cosBit);
        temp1[24] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[58], temp0[23], cospi[6], temp0[24], cosBit);
        temp1[25] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[26], temp0[22], cospi[38], temp0[25], cosBit);
        temp1[26] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[42], temp0[21], cospi[22], temp0[26], cosBit);
        temp1[27] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[10], temp0[20], cospi[54], temp0[27], cosBit);
        temp1[28] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[50], temp0[19], cospi[14], temp0[28], cosBit);
        temp1[29] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[18], temp0[18], cospi[46], temp0[29], cosBit);
        temp1[30] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[34], temp0[17], cospi[30], temp0[30], cosBit);
        temp1[31] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[2], temp0[16], cospi[62], temp0[31], cosBit);
        temp1[32] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] + temp0[33], stageRange[stage]);
        temp1[33] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] - temp0[33], stageRange[stage]);
        temp1[34] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[34] + temp0[35], stageRange[stage]);
        temp1[35] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[34] + temp0[35], stageRange[stage]);
        temp1[36] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[36] + temp0[37], stageRange[stage]);
        temp1[37] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[36] - temp0[37], stageRange[stage]);
        temp1[38] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[38] + temp0[39], stageRange[stage]);
        temp1[39] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[38] + temp0[39], stageRange[stage]);
        temp1[40] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[40] + temp0[41], stageRange[stage]);
        temp1[41] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[40] - temp0[41], stageRange[stage]);
        temp1[42] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[42] + temp0[43], stageRange[stage]);
        temp1[43] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[42] + temp0[43], stageRange[stage]);
        temp1[44] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[44] + temp0[45], stageRange[stage]);
        temp1[45] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[44] - temp0[45], stageRange[stage]);
        temp1[46] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[46] + temp0[47], stageRange[stage]);
        temp1[47] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[46] + temp0[47], stageRange[stage]);
        temp1[48] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] + temp0[49], stageRange[stage]);
        temp1[49] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] - temp0[49], stageRange[stage]);
        temp1[50] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[50] + temp0[51], stageRange[stage]);
        temp1[51] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[50] + temp0[51], stageRange[stage]);
        temp1[52] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[52] + temp0[53], stageRange[stage]);
        temp1[53] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[52] - temp0[53], stageRange[stage]);
        temp1[54] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[54] + temp0[55], stageRange[stage]);
        temp1[55] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[54] + temp0[55], stageRange[stage]);
        temp1[56] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[56] + temp0[57], stageRange[stage]);
        temp1[57] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[56] - temp0[57], stageRange[stage]);
        temp1[58] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[58] + temp0[59], stageRange[stage]);
        temp1[59] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[58] + temp0[59], stageRange[stage]);
        temp1[60] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[60] + temp0[61], stageRange[stage]);
        temp1[61] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[60] - temp0[61], stageRange[stage]);
        temp1[62] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[62] + temp0[63], stageRange[stage]);
        temp1[63] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[62] + temp0[63], stageRange[stage]);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 4
        stage++;
        temp0[0] = temp1[0];
        temp0[1] = temp1[1];
        temp0[2] = temp1[2];
        temp0[3] = temp1[3];
        temp0[4] = temp1[4];
        temp0[5] = temp1[5];
        temp0[6] = temp1[6];
        temp0[7] = temp1[7];
        temp0[8] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[60], temp1[8], -cospi[4], temp1[15], cosBit);
        temp0[9] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[28], temp1[9], -cospi[36], temp1[14], cosBit);
        temp0[10] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[44], temp1[10], -cospi[20], temp1[13], cosBit);
        temp0[11] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[12], temp1[11], -cospi[52], temp1[12], cosBit);
        temp0[12] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[52], temp1[11], cospi[12], temp1[12], cosBit);
        temp0[13] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[20], temp1[10], cospi[44], temp1[13], cosBit);
        temp0[14] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[36], temp1[9], cospi[28], temp1[14], cosBit);
        temp0[15] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[4], temp1[8], cospi[60], temp1[15], cosBit);
        temp0[16] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] + temp1[17], stageRange[stage]);
        temp0[17] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] - temp1[17], stageRange[stage]);
        temp0[18] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[18] + temp1[19], stageRange[stage]);
        temp0[19] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[18] + temp1[19], stageRange[stage]);
        temp0[20] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[20] + temp1[21], stageRange[stage]);
        temp0[21] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[20] - temp1[21], stageRange[stage]);
        temp0[22] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[22] + temp1[23], stageRange[stage]);
        temp0[23] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[22] + temp1[23], stageRange[stage]);
        temp0[24] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[24] + temp1[25], stageRange[stage]);
        temp0[25] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[24] - temp1[25], stageRange[stage]);
        temp0[26] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[26] + temp1[27], stageRange[stage]);
        temp0[27] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[26] + temp1[27], stageRange[stage]);
        temp0[28] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[28] + temp1[29], stageRange[stage]);
        temp0[29] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[28] - temp1[29], stageRange[stage]);
        temp0[30] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[30] + temp1[31], stageRange[stage]);
        temp0[31] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[30] + temp1[31], stageRange[stage]);
        temp0[32] = temp1[32];
        temp0[33] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[4], temp1[33], cospi[60], temp1[62], cosBit);
        temp0[34] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[60], temp1[34], -cospi[4], temp1[61], cosBit);
        temp0[35] = temp1[35];
        temp0[36] = temp1[36];
        temp0[37] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[36], temp1[37], cospi[28], temp1[58], cosBit);
        temp0[38] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[28], temp1[38], -cospi[36], temp1[57], cosBit);
        temp0[39] = temp1[39];
        temp0[40] = temp1[40];
        temp0[41] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[20], temp1[41], cospi[44], temp1[54], cosBit);
        temp0[42] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[44], temp1[42], -cospi[20], temp1[53], cosBit);
        temp0[43] = temp1[43];
        temp0[44] = temp1[44];
        temp0[45] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[52], temp1[45], cospi[12], temp1[50], cosBit);
        temp0[46] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[12], temp1[46], -cospi[52], temp1[49], cosBit);
        temp0[47] = temp1[47];
        temp0[48] = temp1[48];
        temp0[49] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[52], temp1[46], cospi[12], temp1[49], cosBit);
        temp0[50] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[12], temp1[45], cospi[52], temp1[50], cosBit);
        temp0[51] = temp1[51];
        temp0[52] = temp1[52];
        temp0[53] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[20], temp1[42], cospi[44], temp1[53], cosBit);
        temp0[54] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[44], temp1[41], cospi[20], temp1[54], cosBit);
        temp0[55] = temp1[55];
        temp0[56] = temp1[56];
        temp0[57] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[36], temp1[38], cospi[28], temp1[57], cosBit);
        temp0[58] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[28], temp1[37], cospi[36], temp1[58], cosBit);
        temp0[59] = temp1[59];
        temp0[60] = temp1[60];
        temp0[61] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[4], temp1[34], cospi[60], temp1[61], cosBit);
        temp0[62] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[60], temp1[33], cospi[4], temp1[62], cosBit);
        temp0[63] = temp1[63];

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 5
        stage++;
        temp1[0] = temp0[0];
        temp1[1] = temp0[1];
        temp1[2] = temp0[2];
        temp1[3] = temp0[3];
        temp1[4] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[56], temp0[4], -cospi[8], temp0[7], cosBit);
        temp1[5] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[24], temp0[5], -cospi[40], temp0[6], cosBit);
        temp1[6] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[40], temp0[5], cospi[24], temp0[6], cosBit);
        temp1[7] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[8], temp0[4], cospi[56], temp0[7], cosBit);
        temp1[8] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] + temp0[9], stageRange[stage]);
        temp1[9] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] - temp0[9], stageRange[stage]);
        temp1[10] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[10] + temp0[11], stageRange[stage]);
        temp1[11] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[10] + temp0[11], stageRange[stage]);
        temp1[12] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[12] + temp0[13], stageRange[stage]);
        temp1[13] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[12] - temp0[13], stageRange[stage]);
        temp1[14] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[14] + temp0[15], stageRange[stage]);
        temp1[15] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[14] + temp0[15], stageRange[stage]);
        temp1[16] = temp0[16];
        temp1[17] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp0[17], cospi[56], temp0[30], cosBit);
        temp1[18] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[56], temp0[18], -cospi[8], temp0[29], cosBit);
        temp1[19] = temp0[19];
        temp1[20] = temp0[20];
        temp1[21] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp0[21], cospi[24], temp0[26], cosBit);
        temp1[22] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[24], temp0[22], -cospi[40], temp0[25], cosBit);
        temp1[23] = temp0[23];
        temp1[24] = temp0[24];
        temp1[25] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp0[22], cospi[24], temp0[25], cosBit);
        temp1[26] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[24], temp0[21], cospi[40], temp0[26], cosBit);
        temp1[27] = temp0[27];
        temp1[28] = temp0[28];
        temp1[29] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp0[18], cospi[56], temp0[29], cosBit);
        temp1[30] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[56], temp0[17], cospi[8], temp0[30], cosBit);
        temp1[31] = temp0[31];
        temp1[32] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] + temp0[35], stageRange[stage]);
        temp1[33] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] + temp0[34], stageRange[stage]);
        temp1[34] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] - temp0[34], stageRange[stage]);
        temp1[35] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] - temp0[35], stageRange[stage]);
        temp1[36] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[36] + temp0[39], stageRange[stage]);
        temp1[37] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[37] + temp0[38], stageRange[stage]);
        temp1[38] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[37] + temp0[38], stageRange[stage]);
        temp1[39] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[36] + temp0[39], stageRange[stage]);
        temp1[40] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[40] + temp0[43], stageRange[stage]);
        temp1[41] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[41] + temp0[42], stageRange[stage]);
        temp1[42] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[41] - temp0[42], stageRange[stage]);
        temp1[43] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[40] - temp0[43], stageRange[stage]);
        temp1[44] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[44] + temp0[47], stageRange[stage]);
        temp1[45] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[45] + temp0[46], stageRange[stage]);
        temp1[46] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[45] + temp0[46], stageRange[stage]);
        temp1[47] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[44] + temp0[47], stageRange[stage]);
        temp1[48] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] + temp0[51], stageRange[stage]);
        temp1[49] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[49] + temp0[50], stageRange[stage]);
        temp1[50] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[49] - temp0[50], stageRange[stage]);
        temp1[51] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] - temp0[51], stageRange[stage]);
        temp1[52] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[52] + temp0[55], stageRange[stage]);
        temp1[53] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[53] + temp0[54], stageRange[stage]);
        temp1[54] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[53] + temp0[54], stageRange[stage]);
        temp1[55] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[52] + temp0[55], stageRange[stage]);
        temp1[56] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[56] + temp0[59], stageRange[stage]);
        temp1[57] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[57] + temp0[58], stageRange[stage]);
        temp1[58] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[57] - temp0[58], stageRange[stage]);
        temp1[59] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[56] - temp0[59], stageRange[stage]);
        temp1[60] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[60] + temp0[63], stageRange[stage]);
        temp1[61] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[61] + temp0[62], stageRange[stage]);
        temp1[62] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[61] + temp0[62], stageRange[stage]);
        temp1[63] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[60] + temp0[63], stageRange[stage]);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 6
        stage++;
        temp0[0] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[0], cospi[32], temp1[1], cosBit);
        temp0[1] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[0], -cospi[32], temp1[1], cosBit);
        temp0[2] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[2], -cospi[16], temp1[3], cosBit);
        temp0[3] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[16], temp1[2], cospi[48], temp1[3], cosBit);
        temp0[4] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[4] + temp1[5], stageRange[stage]);
        temp0[5] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[4] - temp1[5], stageRange[stage]);
        temp0[6] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[6] + temp1[7], stageRange[stage]);
        temp0[7] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[6] + temp1[7], stageRange[stage]);
        temp0[8] = temp1[8];
        temp0[9] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[9], cospi[48], temp1[14], cosBit);
        temp0[10] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp1[10], -cospi[16], temp1[13], cosBit);
        temp0[11] = temp1[11];
        temp0[12] = temp1[12];
        temp0[13] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[10], cospi[48], temp1[13], cosBit);
        temp0[14] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[9], cospi[16], temp1[14], cosBit);
        temp0[15] = temp1[15];
        temp0[16] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] + temp1[19], stageRange[stage]);
        temp0[17] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[17] + temp1[18], stageRange[stage]);
        temp0[18] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[17] - temp1[18], stageRange[stage]);
        temp0[19] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] - temp1[19], stageRange[stage]);
        temp0[20] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[20] + temp1[23], stageRange[stage]);
        temp0[21] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[21] + temp1[22], stageRange[stage]);
        temp0[22] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[21] + temp1[22], stageRange[stage]);
        temp0[23] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[20] + temp1[23], stageRange[stage]);
        temp0[24] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[24] + temp1[27], stageRange[stage]);
        temp0[25] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[25] + temp1[26], stageRange[stage]);
        temp0[26] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[25] - temp1[26], stageRange[stage]);
        temp0[27] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[24] - temp1[27], stageRange[stage]);
        temp0[28] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[28] + temp1[31], stageRange[stage]);
        temp0[29] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[29] + temp1[30], stageRange[stage]);
        temp0[30] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[29] + temp1[30], stageRange[stage]);
        temp0[31] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[28] + temp1[31], stageRange[stage]);
        temp0[32] = temp1[32];
        temp0[33] = temp1[33];
        temp0[34] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp1[34], cospi[56], temp1[61], cosBit);
        temp0[35] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp1[35], cospi[56], temp1[60], cosBit);
        temp0[36] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[56], temp1[36], -cospi[8], temp1[59], cosBit);
        temp0[37] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[56], temp1[37], -cospi[8], temp1[58], cosBit);
        temp0[38] = temp1[38];
        temp0[39] = temp1[39];
        temp0[40] = temp1[40];
        temp0[41] = temp1[41];
        temp0[42] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp1[42], cospi[24], temp1[53], cosBit);
        temp0[43] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp1[43], cospi[24], temp1[52], cosBit);
        temp0[44] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[24], temp1[44], -cospi[40], temp1[51], cosBit);
        temp0[45] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[24], temp1[45], -cospi[40], temp1[50], cosBit);
        temp0[46] = temp1[46];
        temp0[47] = temp1[47];
        temp0[48] = temp1[48];
        temp0[49] = temp1[49];
        temp0[50] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp1[45], cospi[24], temp1[50], cosBit);
        temp0[51] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[40], temp1[44], cospi[24], temp1[51], cosBit);
        temp0[52] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[24], temp1[43], cospi[40], temp1[52], cosBit);
        temp0[53] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[24], temp1[42], cospi[40], temp1[53], cosBit);
        temp0[54] = temp1[54];
        temp0[55] = temp1[55];
        temp0[56] = temp1[56];
        temp0[57] = temp1[57];
        temp0[58] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp1[37], cospi[56], temp1[58], cosBit);
        temp0[59] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[8], temp1[36], cospi[56], temp1[59], cosBit);
        temp0[60] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[56], temp1[35], cospi[8], temp1[60], cosBit);
        temp0[61] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[56], temp1[34], cospi[8], temp1[61], cosBit);
        temp0[62] = temp1[62];
        temp0[63] = temp1[63];

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 7
        stage++;
        temp1[0] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] + temp0[3], stageRange[stage]);
        temp1[1] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] + temp0[2], stageRange[stage]);
        temp1[2] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] - temp0[2], stageRange[stage]);
        temp1[3] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] - temp0[3], stageRange[stage]);
        temp1[4] = temp0[4];
        temp1[5] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp0[5], cospi[32], temp0[6], cosBit);
        temp1[6] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp0[5], cospi[32], temp0[6], cosBit);
        temp1[7] = temp0[7];
        temp1[8] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] + temp0[11], stageRange[stage]);
        temp1[9] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[9] + temp0[10], stageRange[stage]);
        temp1[10] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[9] - temp0[10], stageRange[stage]);
        temp1[11] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] - temp0[11], stageRange[stage]);
        temp1[12] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[12] + temp0[15], stageRange[stage]);
        temp1[13] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[13] + temp0[14], stageRange[stage]);
        temp1[14] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[13] + temp0[14], stageRange[stage]);
        temp1[15] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[12] + temp0[15], stageRange[stage]);
        temp1[16] = temp0[16];
        temp1[17] = temp0[17];
        temp1[18] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp0[18], cospi[48], temp0[29], cosBit);
        temp1[19] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp0[19], cospi[48], temp0[28], cosBit);
        temp1[20] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp0[20], -cospi[16], temp0[27], cosBit);
        temp1[21] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp0[21], -cospi[16], temp0[26], cosBit);
        temp1[22] = temp0[22];
        temp1[23] = temp0[23];
        temp1[24] = temp0[24];
        temp1[25] = temp0[25];
        temp1[26] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp0[21], cospi[48], temp0[26], cosBit);
        temp1[27] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp0[20], cospi[48], temp0[27], cosBit);
        temp1[28] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp0[19], cospi[16], temp0[28], cosBit);
        temp1[29] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp0[18], cospi[16], temp0[29], cosBit);
        temp1[30] = temp0[30];
        temp1[31] = temp0[31];
        temp1[32] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] + temp0[39], stageRange[stage]);
        temp1[33] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] + temp0[38], stageRange[stage]);
        temp1[34] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[34] + temp0[37], stageRange[stage]);
        temp1[35] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[35] + temp0[36], stageRange[stage]);
        temp1[36] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[35] - temp0[36], stageRange[stage]);
        temp1[37] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[34] - temp0[37], stageRange[stage]);
        temp1[38] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] - temp0[38], stageRange[stage]);
        temp1[39] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] - temp0[39], stageRange[stage]);
        temp1[40] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[40] + temp0[47], stageRange[stage]);
        temp1[41] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[41] + temp0[46], stageRange[stage]);
        temp1[42] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[42] + temp0[45], stageRange[stage]);
        temp1[43] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[43] + temp0[44], stageRange[stage]);
        temp1[44] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[43] + temp0[44], stageRange[stage]);
        temp1[45] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[42] + temp0[45], stageRange[stage]);
        temp1[46] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[41] + temp0[46], stageRange[stage]);
        temp1[47] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[40] + temp0[47], stageRange[stage]);
        temp1[48] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] + temp0[55], stageRange[stage]);
        temp1[49] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[49] + temp0[54], stageRange[stage]);
        temp1[50] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[50] + temp0[53], stageRange[stage]);
        temp1[51] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[51] + temp0[52], stageRange[stage]);
        temp1[52] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[51] - temp0[52], stageRange[stage]);
        temp1[53] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[50] - temp0[53], stageRange[stage]);
        temp1[54] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[49] - temp0[54], stageRange[stage]);
        temp1[55] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] - temp0[55], stageRange[stage]);
        temp1[56] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[56] + temp0[63], stageRange[stage]);
        temp1[57] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[57] + temp0[62], stageRange[stage]);
        temp1[58] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[58] + temp0[61], stageRange[stage]);
        temp1[59] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[59] + temp0[60], stageRange[stage]);
        temp1[60] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[59] + temp0[60], stageRange[stage]);
        temp1[61] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[58] + temp0[61], stageRange[stage]);
        temp1[62] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[57] + temp0[62], stageRange[stage]);
        temp1[63] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[56] + temp0[63], stageRange[stage]);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 8
        stage++;
        temp0[0] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[0] + temp1[7], stageRange[stage]);
        temp0[1] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[1] + temp1[6], stageRange[stage]);
        temp0[2] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[2] + temp1[5], stageRange[stage]);
        temp0[3] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[3] + temp1[4], stageRange[stage]);
        temp0[4] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[3] - temp1[4], stageRange[stage]);
        temp0[5] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[2] - temp1[5], stageRange[stage]);
        temp0[6] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[1] - temp1[6], stageRange[stage]);
        temp0[7] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[0] - temp1[7], stageRange[stage]);
        temp0[8] = temp1[8];
        temp0[9] = temp1[9];
        temp0[10] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[10], cospi[32], temp1[13], cosBit);
        temp0[11] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[11], cospi[32], temp1[12], cosBit);
        temp0[12] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[11], cospi[32], temp1[12], cosBit);
        temp0[13] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[10], cospi[32], temp1[13], cosBit);
        temp0[14] = temp1[14];
        temp0[15] = temp1[15];
        temp0[16] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] + temp1[23], stageRange[stage]);
        temp0[17] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[17] + temp1[22], stageRange[stage]);
        temp0[18] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[18] + temp1[21], stageRange[stage]);
        temp0[19] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[19] + temp1[20], stageRange[stage]);
        temp0[20] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[19] - temp1[20], stageRange[stage]);
        temp0[21] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[18] - temp1[21], stageRange[stage]);
        temp0[22] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[17] - temp1[22], stageRange[stage]);
        temp0[23] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[16] - temp1[23], stageRange[stage]);
        temp0[24] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[24] + temp1[31], stageRange[stage]);
        temp0[25] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[25] + temp1[30], stageRange[stage]);
        temp0[26] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[26] + temp1[29], stageRange[stage]);
        temp0[27] = Av1Dct4Inverse1dTransformer.ClampValue(-temp1[27] + temp1[28], stageRange[stage]);
        temp0[28] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[27] + temp1[28], stageRange[stage]);
        temp0[29] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[26] + temp1[29], stageRange[stage]);
        temp0[30] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[25] + temp1[30], stageRange[stage]);
        temp0[31] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[24] + temp1[31], stageRange[stage]);
        temp0[32] = temp1[32];
        temp0[33] = temp1[33];
        temp0[34] = temp1[34];
        temp0[35] = temp1[35];
        temp0[36] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[36], cospi[48], temp1[59], cosBit);
        temp0[37] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[37], cospi[48], temp1[58], cosBit);
        temp0[38] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[38], cospi[48], temp1[57], cosBit);
        temp0[39] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[39], cospi[48], temp1[56], cosBit);
        temp0[40] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp1[40], -cospi[16], temp1[55], cosBit);
        temp0[41] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp1[41], -cospi[16], temp1[54], cosBit);
        temp0[42] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp1[42], -cospi[16], temp1[53], cosBit);
        temp0[43] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[48], temp1[43], -cospi[16], temp1[52], cosBit);
        temp0[44] = temp1[44];
        temp0[45] = temp1[45];
        temp0[46] = temp1[46];
        temp0[47] = temp1[47];
        temp0[48] = temp1[48];
        temp0[49] = temp1[49];
        temp0[50] = temp1[50];
        temp0[51] = temp1[51];
        temp0[52] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[43], cospi[48], temp1[52], cosBit);
        temp0[53] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[42], cospi[48], temp1[53], cosBit);
        temp0[54] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[41], cospi[48], temp1[54], cosBit);
        temp0[55] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[16], temp1[40], cospi[48], temp1[55], cosBit);
        temp0[56] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[39], cospi[16], temp1[56], cosBit);
        temp0[57] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[38], cospi[16], temp1[57], cosBit);
        temp0[58] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[37], cospi[16], temp1[58], cosBit);
        temp0[59] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[48], temp1[36], cospi[16], temp1[59], cosBit);
        temp0[60] = temp1[60];
        temp0[61] = temp1[61];
        temp0[62] = temp1[62];
        temp0[63] = temp1[63];

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 9
        stage++;
        temp1[0] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] + temp0[15], stageRange[stage]);
        temp1[1] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] + temp0[14], stageRange[stage]);
        temp1[2] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[2] + temp0[13], stageRange[stage]);
        temp1[3] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[3] + temp0[12], stageRange[stage]);
        temp1[4] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[4] + temp0[11], stageRange[stage]);
        temp1[5] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[5] + temp0[10], stageRange[stage]);
        temp1[6] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[6] + temp0[9], stageRange[stage]);
        temp1[7] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[7] + temp0[8], stageRange[stage]);
        temp1[8] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[7] - temp0[8], stageRange[stage]);
        temp1[9] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[6] - temp0[9], stageRange[stage]);
        temp1[10] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[5] - temp0[10], stageRange[stage]);
        temp1[11] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[4] - temp0[11], stageRange[stage]);
        temp1[12] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[3] - temp0[12], stageRange[stage]);
        temp1[13] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[2] - temp0[13], stageRange[stage]);
        temp1[14] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] - temp0[14], stageRange[stage]);
        temp1[15] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] - temp0[15], stageRange[stage]);
        temp1[16] = temp0[16];
        temp1[17] = temp0[17];
        temp1[18] = temp0[18];
        temp1[19] = temp0[19];
        temp1[20] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp0[20], cospi[32], temp0[27], cosBit);
        temp1[21] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp0[21], cospi[32], temp0[26], cosBit);
        temp1[22] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp0[22], cospi[32], temp0[25], cosBit);
        temp1[23] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp0[23], cospi[32], temp0[24], cosBit);
        temp1[24] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp0[23], cospi[32], temp0[24], cosBit);
        temp1[25] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp0[22], cospi[32], temp0[25], cosBit);
        temp1[26] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp0[21], cospi[32], temp0[26], cosBit);
        temp1[27] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp0[20], cospi[32], temp0[27], cosBit);
        temp1[28] = temp0[28];
        temp1[29] = temp0[29];
        temp1[30] = temp0[30];
        temp1[31] = temp0[31];
        temp1[32] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] + temp0[47], stageRange[stage]);
        temp1[33] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] + temp0[46], stageRange[stage]);
        temp1[34] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[34] + temp0[45], stageRange[stage]);
        temp1[35] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[35] + temp0[44], stageRange[stage]);
        temp1[36] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[36] + temp0[43], stageRange[stage]);
        temp1[37] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[37] + temp0[42], stageRange[stage]);
        temp1[38] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[38] + temp0[41], stageRange[stage]);
        temp1[39] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[39] + temp0[40], stageRange[stage]);
        temp1[40] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[39] - temp0[40], stageRange[stage]);
        temp1[41] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[38] - temp0[41], stageRange[stage]);
        temp1[42] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[37] - temp0[42], stageRange[stage]);
        temp1[43] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[36] - temp0[43], stageRange[stage]);
        temp1[44] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[35] - temp0[44], stageRange[stage]);
        temp1[45] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[34] - temp0[45], stageRange[stage]);
        temp1[46] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[33] - temp0[46], stageRange[stage]);
        temp1[47] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[32] - temp0[47], stageRange[stage]);
        temp1[48] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[48] + temp0[63], stageRange[stage]);
        temp1[49] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[49] + temp0[62], stageRange[stage]);
        temp1[50] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[50] + temp0[61], stageRange[stage]);
        temp1[51] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[51] + temp0[60], stageRange[stage]);
        temp1[52] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[52] + temp0[59], stageRange[stage]);
        temp1[53] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[53] + temp0[58], stageRange[stage]);
        temp1[54] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[54] + temp0[57], stageRange[stage]);
        temp1[55] = Av1Dct4Inverse1dTransformer.ClampValue(-temp0[55] + temp0[56], stageRange[stage]);
        temp1[56] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[55] + temp0[56], stageRange[stage]);
        temp1[57] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[54] + temp0[57], stageRange[stage]);
        temp1[58] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[53] + temp0[58], stageRange[stage]);
        temp1[59] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[52] + temp0[59], stageRange[stage]);
        temp1[60] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[51] + temp0[60], stageRange[stage]);
        temp1[61] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[50] + temp0[61], stageRange[stage]);
        temp1[62] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[49] + temp0[62], stageRange[stage]);
        temp1[63] = Av1Dct4Inverse1dTransformer.ClampValue(temp0[48] + temp0[63], stageRange[stage]);

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 10
        stage++;
        temp0[0] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[0] + temp1[31], stageRange[stage]);
        temp0[1] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[1] + temp1[30], stageRange[stage]);
        temp0[2] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[2] + temp1[29], stageRange[stage]);
        temp0[3] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[3] + temp1[28], stageRange[stage]);
        temp0[4] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[4] + temp1[27], stageRange[stage]);
        temp0[5] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[5] + temp1[26], stageRange[stage]);
        temp0[6] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[6] + temp1[25], stageRange[stage]);
        temp0[7] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[7] + temp1[24], stageRange[stage]);
        temp0[8] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[8] + temp1[23], stageRange[stage]);
        temp0[9] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[9] + temp1[22], stageRange[stage]);
        temp0[10] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[10] + temp1[21], stageRange[stage]);
        temp0[11] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[11] + temp1[20], stageRange[stage]);
        temp0[12] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[12] + temp1[19], stageRange[stage]);
        temp0[13] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[13] + temp1[18], stageRange[stage]);
        temp0[14] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[14] + temp1[17], stageRange[stage]);
        temp0[15] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[15] + temp1[16], stageRange[stage]);
        temp0[16] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[15] - temp1[16], stageRange[stage]);
        temp0[17] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[14] - temp1[17], stageRange[stage]);
        temp0[18] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[13] - temp1[18], stageRange[stage]);
        temp0[19] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[12] - temp1[19], stageRange[stage]);
        temp0[20] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[11] - temp1[20], stageRange[stage]);
        temp0[21] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[10] - temp1[21], stageRange[stage]);
        temp0[22] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[9] - temp1[22], stageRange[stage]);
        temp0[23] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[8] - temp1[23], stageRange[stage]);
        temp0[24] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[7] - temp1[24], stageRange[stage]);
        temp0[25] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[6] - temp1[25], stageRange[stage]);
        temp0[26] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[5] - temp1[26], stageRange[stage]);
        temp0[27] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[4] - temp1[27], stageRange[stage]);
        temp0[28] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[3] - temp1[28], stageRange[stage]);
        temp0[29] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[2] - temp1[29], stageRange[stage]);
        temp0[30] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[1] - temp1[30], stageRange[stage]);
        temp0[31] = Av1Dct4Inverse1dTransformer.ClampValue(temp1[0] - temp1[31], stageRange[stage]);
        temp0[32] = temp1[32];
        temp0[33] = temp1[33];
        temp0[34] = temp1[34];
        temp0[35] = temp1[35];
        temp0[36] = temp1[36];
        temp0[37] = temp1[37];
        temp0[38] = temp1[38];
        temp0[39] = temp1[39];
        temp0[40] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[40], cospi[32], temp1[55], cosBit);
        temp0[41] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[41], cospi[32], temp1[54], cosBit);
        temp0[42] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[42], cospi[32], temp1[53], cosBit);
        temp0[43] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[43], cospi[32], temp1[52], cosBit);
        temp0[44] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[44], cospi[32], temp1[51], cosBit);
        temp0[45] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[45], cospi[32], temp1[50], cosBit);
        temp0[46] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[46], cospi[32], temp1[49], cosBit);
        temp0[47] = Av1Dct4Inverse1dTransformer.HalfButterfly(-cospi[32], temp1[47], cospi[32], temp1[48], cosBit);
        temp0[48] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[47], cospi[32], temp1[48], cosBit);
        temp0[49] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[46], cospi[32], temp1[49], cosBit);
        temp0[50] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[45], cospi[32], temp1[50], cosBit);
        temp0[51] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[44], cospi[32], temp1[51], cosBit);
        temp0[52] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[43], cospi[32], temp1[52], cosBit);
        temp0[53] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[42], cospi[32], temp1[53], cosBit);
        temp0[54] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[41], cospi[32], temp1[54], cosBit);
        temp0[55] = Av1Dct4Inverse1dTransformer.HalfButterfly(cospi[32], temp1[40], cospi[32], temp1[55], cosBit);
        temp0[56] = temp1[56];
        temp0[57] = temp1[57];
        temp0[58] = temp1[58];
        temp0[59] = temp1[59];
        temp0[60] = temp1[60];
        temp0[61] = temp1[61];
        temp0[62] = temp1[62];
        temp0[63] = temp1[63];

        // range_check_buf(stage, input, bf1, size, stage_range[stage]);

        // stage 11
        stage++;
        Unsafe.Add(ref output, 0) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] + temp0[63], stageRange[stage]);
        Unsafe.Add(ref output, 1) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] + temp0[62], stageRange[stage]);
        Unsafe.Add(ref output, 2) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[2] + temp0[61], stageRange[stage]);
        Unsafe.Add(ref output, 3) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[3] + temp0[60], stageRange[stage]);
        Unsafe.Add(ref output, 4) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[4] + temp0[59], stageRange[stage]);
        Unsafe.Add(ref output, 5) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[5] + temp0[58], stageRange[stage]);
        Unsafe.Add(ref output, 6) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[6] + temp0[57], stageRange[stage]);
        Unsafe.Add(ref output, 7) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[7] + temp0[56], stageRange[stage]);
        Unsafe.Add(ref output, 8) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] + temp0[55], stageRange[stage]);
        Unsafe.Add(ref output, 9) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[9] + temp0[54], stageRange[stage]);
        Unsafe.Add(ref output, 10) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[10] + temp0[53], stageRange[stage]);
        Unsafe.Add(ref output, 11) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[11] + temp0[52], stageRange[stage]);
        Unsafe.Add(ref output, 12) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[12] + temp0[51], stageRange[stage]);
        Unsafe.Add(ref output, 13) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[13] + temp0[50], stageRange[stage]);
        Unsafe.Add(ref output, 14) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[14] + temp0[49], stageRange[stage]);
        Unsafe.Add(ref output, 15) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[15] + temp0[48], stageRange[stage]);
        Unsafe.Add(ref output, 16) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[16] + temp0[47], stageRange[stage]);
        Unsafe.Add(ref output, 17) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[17] + temp0[46], stageRange[stage]);
        Unsafe.Add(ref output, 18) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[18] + temp0[45], stageRange[stage]);
        Unsafe.Add(ref output, 19) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[19] + temp0[44], stageRange[stage]);
        Unsafe.Add(ref output, 20) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[20] + temp0[43], stageRange[stage]);
        Unsafe.Add(ref output, 21) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[21] + temp0[42], stageRange[stage]);
        Unsafe.Add(ref output, 22) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[22] + temp0[41], stageRange[stage]);
        Unsafe.Add(ref output, 23) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[23] + temp0[40], stageRange[stage]);
        Unsafe.Add(ref output, 24) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[24] + temp0[39], stageRange[stage]);
        Unsafe.Add(ref output, 25) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[25] + temp0[38], stageRange[stage]);
        Unsafe.Add(ref output, 26) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[26] + temp0[37], stageRange[stage]);
        Unsafe.Add(ref output, 27) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[27] + temp0[36], stageRange[stage]);
        Unsafe.Add(ref output, 28) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[28] + temp0[35], stageRange[stage]);
        Unsafe.Add(ref output, 29) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[29] + temp0[34], stageRange[stage]);
        Unsafe.Add(ref output, 30) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[30] + temp0[33], stageRange[stage]);
        Unsafe.Add(ref output, 31) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[31] + temp0[32], stageRange[stage]);
        Unsafe.Add(ref output, 32) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[31] - temp0[32], stageRange[stage]);
        Unsafe.Add(ref output, 33) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[30] - temp0[33], stageRange[stage]);
        Unsafe.Add(ref output, 34) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[29] - temp0[34], stageRange[stage]);
        Unsafe.Add(ref output, 35) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[28] - temp0[35], stageRange[stage]);
        Unsafe.Add(ref output, 36) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[27] - temp0[36], stageRange[stage]);
        Unsafe.Add(ref output, 37) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[26] - temp0[37], stageRange[stage]);
        Unsafe.Add(ref output, 38) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[25] - temp0[38], stageRange[stage]);
        Unsafe.Add(ref output, 39) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[24] - temp0[39], stageRange[stage]);
        Unsafe.Add(ref output, 40) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[23] - temp0[40], stageRange[stage]);
        Unsafe.Add(ref output, 41) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[22] - temp0[41], stageRange[stage]);
        Unsafe.Add(ref output, 42) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[21] - temp0[42], stageRange[stage]);
        Unsafe.Add(ref output, 43) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[20] - temp0[43], stageRange[stage]);
        Unsafe.Add(ref output, 44) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[19] - temp0[44], stageRange[stage]);
        Unsafe.Add(ref output, 45) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[18] - temp0[45], stageRange[stage]);
        Unsafe.Add(ref output, 46) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[17] - temp0[46], stageRange[stage]);
        Unsafe.Add(ref output, 47) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[16] - temp0[47], stageRange[stage]);
        Unsafe.Add(ref output, 48) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[15] - temp0[48], stageRange[stage]);
        Unsafe.Add(ref output, 49) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[14] - temp0[49], stageRange[stage]);
        Unsafe.Add(ref output, 50) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[13] - temp0[50], stageRange[stage]);
        Unsafe.Add(ref output, 51) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[12] - temp0[51], stageRange[stage]);
        Unsafe.Add(ref output, 52) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[11] - temp0[52], stageRange[stage]);
        Unsafe.Add(ref output, 53) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[10] - temp0[53], stageRange[stage]);
        Unsafe.Add(ref output, 54) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[9] - temp0[54], stageRange[stage]);
        Unsafe.Add(ref output, 55) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[8] - temp0[55], stageRange[stage]);
        Unsafe.Add(ref output, 56) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[7] - temp0[56], stageRange[stage]);
        Unsafe.Add(ref output, 57) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[6] - temp0[57], stageRange[stage]);
        Unsafe.Add(ref output, 58) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[5] - temp0[58], stageRange[stage]);
        Unsafe.Add(ref output, 59) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[4] - temp0[59], stageRange[stage]);
        Unsafe.Add(ref output, 60) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[3] - temp0[60], stageRange[stage]);
        Unsafe.Add(ref output, 61) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[2] - temp0[61], stageRange[stage]);
        Unsafe.Add(ref output, 62) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[1] - temp0[62], stageRange[stage]);
        Unsafe.Add(ref output, 63) = Av1Dct4Inverse1dTransformer.ClampValue(temp0[0] - temp0[63], stageRange[stage]);
    }
}
